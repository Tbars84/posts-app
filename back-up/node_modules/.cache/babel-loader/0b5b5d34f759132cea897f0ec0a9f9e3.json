{"ast":null,"code":"import _regeneratorRuntime from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var signIn =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(credentials) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return function (dispatch, getState, _ref2) {\n              var getFirebase = _ref2.getFirebase;\n              var firebase = getFirebase();\n              firebase.auth(); // GIT PROVIDER SIGNUP\n\n              var providerGith = new firebase.auth.GithubAuthProvider();\n              providerGith.addScope('gist');\n              firebase.auth().signInWithPopup(providerGith).then(function (result) {\n                localStorage.setItem('uidToken', result.credential.accessToken);\n                localStorage.setItem('userRegistered', JSON.stringify(result.user));\n                return dispatch({\n                  type: 'LOGIN_SUCCESS'\n                });\n              }).catch(function (error) {\n                dispatch({\n                  type: 'LOGIN_ERROR',\n                  error: error\n                });\n              });\n            };\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function signIn(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var signOut = function signOut() {\n  return function (dispatch, getState, _ref3) {\n    var getFirebase = _ref3.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signOut().then(function () {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/src/app/store/actions/actions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","providerGith","GithubAuthProvider","addScope","signInWithPopup","then","result","localStorage","setItem","credential","accessToken","JSON","stringify","user","type","catch","error","signOut"],"mappings":";;AAAA,OAAO,IAAMA,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACd,UAASC,QAAT,EAAmBC,QAAnB,SAA2C;AAAA,kBAAbC,WAAa,SAAbA,WAAa;AAC/C,kBAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,cAAAA,QAAQ,CAACC,IAAT,GAF+C,CAG/C;;AACA,kBAAMC,YAAY,GAAG,IAAIF,QAAQ,CAACC,IAAT,CAAcE,kBAAlB,EAArB;AACAD,cAAAA,YAAY,CAACE,QAAb,CAAsB,MAAtB;AACAJ,cAAAA,QAAQ,CAACC,IAAT,GAAgBI,eAAhB,CAAgCH,YAAhC,EAA8CI,IAA9C,CAAmD,UAASC,MAAT,EAAiB;AAClEC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,MAAM,CAACG,UAAP,CAAkBC,WAAnD;AACAH,gBAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCG,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,IAAtB,CAAvC;AACA,uBAAOjB,QAAQ,CAAC;AAAEkB,kBAAAA,IAAI,EAAG;AAAT,iBAAD,CAAf;AACD,eAJD,EAIGC,KAJH,CAIS,UAASC,KAAT,EAAgB;AACvBpB,gBAAAA,QAAQ,CAAC;AAAEkB,kBAAAA,IAAI,EAAG,aAAT;AAAyBE,kBAAAA,KAAK,EAALA;AAAzB,iBAAD,CAAR;AACD,eAND;AAOD,aAdmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANtB,MAAM;AAAA;AAAA;AAAA,GAAZ;AAiBP,OAAO,IAAMuB,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,UAACrB,QAAD,EAAWC,QAAX,SAAuC;AAAA,QAAjBC,WAAiB,SAAjBA,WAAiB;AAC5C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBiB,OAAhB,GAA0BZ,IAA1B,CAA+B,YAAM;AACnCT,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFD;AAGD,GALD;AAMD,CAPM","sourcesContent":["export const signIn = async (credentials) => {\n  await function(dispatch, getState, {getFirebase}){\n    const firebase = getFirebase();    \n    firebase.auth()\n    // GIT PROVIDER SIGNUP\n    const providerGith = new firebase.auth.GithubAuthProvider();\n    providerGith.addScope('gist');\n    firebase.auth().signInWithPopup(providerGith).then(function(result) {\n      localStorage.setItem('uidToken', result.credential.accessToken);\n      localStorage.setItem('userRegistered', JSON.stringify(result.user));\n      return dispatch({ type : 'LOGIN_SUCCESS' })\n    }).catch(function(error) {\n      dispatch({ type : 'LOGIN_ERROR' , error})\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n} "]},"metadata":{},"sourceType":"module"}