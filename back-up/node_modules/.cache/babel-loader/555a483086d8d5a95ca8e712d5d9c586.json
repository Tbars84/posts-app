{"ast":null,"code":"export var signIn = function signIn(credentials) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth(); // GIT PROVIDER SIGNUP\n\n    var providerGith = new firebase.auth.GithubAuthProvider();\n    providerGith.addScope('gist');\n    firebase.auth().signInWithPopup(providerGith).then(function (result) {\n      return new Promise(function (res, rej) {\n        if (res) {\n          return dispatch({\n            type: 'LOGIN_SUCCESS'\n          });\n        }\n      }).then(function () {\n        alert();\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        error: error\n      });\n    });\n  };\n};\nexport var signOut = function signOut() {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signOut().then(function () {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/src/app/store/actions/actions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","providerGith","GithubAuthProvider","addScope","signInWithPopup","then","result","Promise","res","rej","type","alert","catch","error","signOut"],"mappings":"AAAA,OAAO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,WAAD,EAAiB;AACrC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAuC;AAAA,QAAjBC,WAAiB,QAAjBA,WAAiB;AAC5C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CAACC,IAAT,GAF4C,CAI5C;;AACA,QAAMC,YAAY,GAAG,IAAIF,QAAQ,CAACC,IAAT,CAAcE,kBAAlB,EAArB;AACAD,IAAAA,YAAY,CAACE,QAAb,CAAsB,MAAtB;AAEAJ,IAAAA,QAAQ,CAACC,IAAT,GAAgBI,eAAhB,CAAgCH,YAAhC,EACCI,IADD,CACM,UAASC,MAAT,EAAiB;AACrB,aAAO,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAOC,GAAP,EAAa;AAC9B,YAAGD,GAAH,EAAO;AACL,iBAAOZ,QAAQ,CAAC;AAAEc,YAAAA,IAAI,EAAG;AAAT,WAAD,CAAf;AACD;AACF,OAJM,EAIJL,IAJI,CAIC,YAAI;AACVM,QAAAA,KAAK;AACN,OANM,CAAP;AAOD,KATD,EAUCC,KAVD,CAUO,UAASC,KAAT,EAAgB;AACrBjB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAG,aAAT;AAAyBG,QAAAA,KAAK,EAALA;AAAzB,OAAD,CAAR;AACD,KAZD;AAaD,GArBD;AAsBD,CAvBM;AAyBP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,UAAClB,QAAD,EAAWC,QAAX,SAAuC;AAAA,QAAjBC,WAAiB,SAAjBA,WAAiB;AAC5C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBc,OAAhB,GAA0BT,IAA1B,CAA+B,YAAM;AACnCT,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFD;AAGD,GALD;AAMD,CAPM","sourcesContent":["export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();    \n    firebase.auth()\n\n    // GIT PROVIDER SIGNUP\n    const providerGith = new firebase.auth.GithubAuthProvider();\n    providerGith.addScope('gist');\n    \n    firebase.auth().signInWithPopup(providerGith)\n    .then(function(result) {\n      return new Promise((res , rej)=>{\n        if(res){\n          return dispatch({ type : 'LOGIN_SUCCESS' })\n        }\n      }).then(()=>{\n        alert()\n      })\n    })\n    .catch(function(error) {\n      dispatch({ type : 'LOGIN_ERROR' , error})\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n} "]},"metadata":{},"sourceType":"module"}