{"ast":null,"code":"import _classCallCheck from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/src/app/container/dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContInfo from '../components/blogContent/containerInfo/contInfo';\nimport { fetchAllGists as _fetchAllGists } from '../store/actions/apiCalls';\nimport { Redirect } from 'react-router-dom';\nimport BloggerInfo from '../components/blogContent/bloggerSnippet';\nimport BlogList from '../components/blogContent/blogList';\n\nvar DashBoard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DashBoard, _Component);\n\n  function DashBoard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DashBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DashBoard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userLog: {},\n      userToken: '',\n      gistUser: []\n    };\n    return _this;\n  }\n\n  _createClass(DashBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        gistUser: this.props.fetchAllGists('Tbars84')\n      });\n      setTimeout(function () {\n        console.log(_this2.props.fetchAllGists('Tbars84'));\n      }, 2000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.gistUser)\n      var _this$props = this.props,\n          auth = _this$props.auth,\n          data = _this$props.data;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n      var token = localStorage.getItem('uidToken');\n      var userCreds = JSON.parse(localStorage.getItem('userRegistered'));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(ContInfo, {\n        _title: \"Blog msco.\",\n        _body: \"Explore the unknown. Uncover what matters. Prototype, test, repeat. Combine intuition with evidence. Design with intent and build it right.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(BloggerInfo, {\n        key: token,\n        tokenId: token,\n        description: userCreds.email,\n        userLogin: userCreds.displayName,\n        avatarUrl: userCreds.photoURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), this.props.fetchAllGists('Tbars84') ? this.props.fetchAllGists('Tbars84').map(function (post) {\n        return React.createElement(BlogList, {\n          key: post.id,\n          _postKey: post.id,\n          _type: 'gist',\n          _postName: post.description,\n          _postUrl: post.html_url,\n          _posDate: post.created_at,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      }) : console.log(this.props.fetchAllGists('Tbars84')));\n    }\n  }]);\n\n  return DashBoard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.firebase.auth,\n    data: state.data\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchAllGists: function fetchAllGists(name) {\n      return dispatch(_fetchAllGists(name));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashBoard);","map":{"version":3,"sources":["/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/src/app/container/dashboard.js"],"names":["React","Component","connect","ContInfo","fetchAllGists","Redirect","BloggerInfo","BlogList","DashBoard","state","userLog","userToken","gistUser","setState","props","setTimeout","console","log","auth","data","uid","token","localStorage","getItem","userCreds","JSON","parse","email","displayName","photoURL","map","post","id","description","html_url","created_at","mapStateToProps","firebase","mapDispatchToProps","dispatch","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ContInfo from '../components/blogContent/containerInfo/contInfo'\nimport {fetchAllGists} from '../store/actions/apiCalls'\nimport { Redirect } from 'react-router-dom'\nimport BloggerInfo from '../components/blogContent/bloggerSnippet'\nimport BlogList from '../components/blogContent/blogList'\n\nclass DashBoard extends Component {\n  state = {\n    userLog: {},\n    userToken: '',\n    gistUser : []\n  }\n  componentDidMount(){\n      this.setState({gistUser: this.props.fetchAllGists('Tbars84') })\n      setTimeout(()=>{\n        console.log(this.props.fetchAllGists('Tbars84'))\n      }, 2000)\n  }\n\n  render() {\n    // console.log(this.state.gistUser)\n    const { auth , data } = this.props;\n\n    if (!auth.uid) return <Redirect to='/' /> \n    const token = localStorage.getItem('uidToken')\n    const userCreds =  JSON.parse(localStorage.getItem('userRegistered'));\n\n    return (\n      <div>\n            <ContInfo _title='Blog msco.' \n            _body='Explore the unknown. Uncover what matters. Prototype, test, repeat. Combine intuition with evidence. Design with intent and build it right.' />\n            <BloggerInfo key={token} tokenId={token} description={userCreds.email} userLogin={userCreds.displayName} avatarUrl={userCreds.photoURL} />\n            {\n              // data && data.map(\n              //   (post)=> {return (\n              //     <BlogList key={post.id} _postKey={post.id} _type={'gist'} _postName={post.description}  _postUrl={post.html_url} _posDate={post.created_at}/>\n              //   )}                \n              // )\n            }\n            {\n              this.props.fetchAllGists('Tbars84') ? (\n                this.props.fetchAllGists('Tbars84').map(\n                  (post)=> {return (\n                    <BlogList key={post.id} _postKey={post.id} _type={'gist'} _postName={post.description}  _postUrl={post.html_url} _posDate={post.created_at}/>\n                  )}                \n                )\n              ):(\n                console.log(this.props.fetchAllGists('Tbars84'))\n                )\n            }            \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    data: state.data\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllGists:  (name) => dispatch(fetchAllGists(name)),\n  }\n}\n\nexport default connect(mapStateToProps , mapDispatchToProps )(DashBoard)\n\n"]},"metadata":{},"sourceType":"module"}