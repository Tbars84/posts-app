{"ast":null,"code":"import _classCallCheck from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/src/app/container/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // CONEXION A FIREBASE\n\nimport firebase from 'firebase/app';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { AUTH_VERIF } from '../config/config'; // IMPPORTAR COMPONENTES DE LA LANDING\n\nimport Header from '../components/header/header';\nimport Search from '../components/searchForm/search';\nimport OwnerPosts from '../components/posts/ownerPosts';\nimport PostItems from '../components/posts/postItems';\nimport bg from \"../assets/background.svg\"; // ESTILOS GLOBALES\n\nimport './App.css';\nfirebase.initializeApp(AUTH_VERIF);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this)); // SE CREA ESTADOS PARA ASIGNAR LOS VALORES QUE SE MAPEAN EN EL MOMENTO DE USAR EL BUSCADOR\n\n    _this.uiConfig = {\n      signInFlow: \"popup\",\n      signInOptions: [firebase.auth.GithubAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccess: function signInSuccess() {\n          return false;\n        }\n      }\n    };\n\n    _this.search = function (name) {\n      axios.get(\"https://api.github.com/users/\".concat(name, \"/repos?page=1&per_page=30\")).then(function (response) {\n        _this.setState({\n          userOwner: response.data[0].owner,\n          postList: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      // USUARIO QUE SE BUSCA\n      userOwner: {},\n      // LISTA DE REPOSITORIOS QUE EMULAN LISTA DE POSTS\n      postList: [],\n      // ESTADO DE CONEXION\n      signIn: false\n    };\n    _this.infoLanding = {\n      title: 'Blog msco.',\n      body: 'Explore the unknown. Uncover what matters. Prototype, test, repeat. Combine intuition with evidence. Design with intent and build it right.' // INICIA MAGIA DE FIREBASE\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        _this2.setState({\n          isSignedIn: !!user\n        });\n\n        console.log(\"user\", user);\n      });\n    } // EVENTO DE BUSCADOR, EL FILTRO SE REALIZA POR NOMBRE DE USUARIO DE GITHUB\n\n  }, {\n    key: \"render\",\n    value: function render(props) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Header, {\n        signState: this.state.signIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container--info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.infoLanding.title), React.createElement(\"p\", {\n        className: \"subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.infoLanding.body), React.createElement(Search, {\n        search: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(OwnerPosts, {\n        key: this.state.userOwner.id,\n        description: this.state.userOwner.type,\n        userLogin: this.state.userOwner.login,\n        avatarUrl: this.state.userOwner.avatar_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), this.state.postList.map(function (post) {\n        return React.createElement(PostItems, {\n          key: post.id,\n          postName: post.full_name,\n          postUrl: post.html_url,\n          posDate: post.created_at,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"container--img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: bg,\n        alt: \"Background Posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/src/app/container/App.js"],"names":["React","Component","axios","firebase","StyledFirebaseAuth","AUTH_VERIF","Header","Search","OwnerPosts","PostItems","initializeApp","App","props","uiConfig","signInFlow","signInOptions","auth","GithubAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccess","search","name","get","then","response","setState","userOwner","data","owner","postList","catch","error","console","log","state","signIn","infoLanding","title","body","onAuthStateChanged","user","isSignedIn","id","type","login","avatar_url","map","post","full_name","html_url","created_at","bg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\n\n// CONEXION A FIREBASE\nimport firebase from 'firebase/app'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { AUTH_VERIF } from '../config/config'\n\n// IMPPORTAR COMPONENTES DE LA LANDING\nimport Header from '../components/header/header'\nimport Search from '../components/searchForm/search'\nimport OwnerPosts from '../components/posts/ownerPosts'\nimport PostItems from '../components/posts/postItems'\nimport bg from '../assets/background.svg';\n// ESTILOS GLOBALES\nimport './App.css'\nfirebase.initializeApp(AUTH_VERIF)\nclass App extends Component {\n  constructor(props){\n    super()\n    // SE CREA ESTADOS PARA ASIGNAR LOS VALORES QUE SE MAPEAN EN EL MOMENTO DE USAR EL BUSCADOR\n    this.state = {\n      // USUARIO QUE SE BUSCA\n      userOwner : {},\n      // LISTA DE REPOSITORIOS QUE EMULAN LISTA DE POSTS\n      postList : [],\n      // ESTADO DE CONEXION\n      signIn : false\n    }\n    this.infoLanding = {\n      title: 'Blog msco.',\n      body: 'Explore the unknown. Uncover what matters. Prototype, test, repeat. Combine intuition with evidence. Design with intent and build it right.'\n    }\n    // INICIA MAGIA DE FIREBASE\n  }\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  }\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ isSignedIn: !!user })\n      console.log(\"user\", user)\n    })    \n  }\n  // EVENTO DE BUSCADOR, EL FILTRO SE REALIZA POR NOMBRE DE USUARIO DE GITHUB\n  search = (name) =>{\n    axios.get(`https://api.github.com/users/${name}/repos?page=1&per_page=30`)\n     .then((response) => {\n       this.setState({\n          userOwner: response.data[0].owner,\n          postList: response.data\n        })\n     })\n    .catch((error)=>{\n       console.log(error);\n    });\n  }\n  render(props) {\n    return (\n      <div className=\"App\">\n        <Header  signState={this.state.signIn} />\n        <div className=\"container\">\n            <div className='container--info'>\n                <h1>{this.infoLanding.title}</h1>\n                <p className=\"subtitle\">{this.infoLanding.body}</p>\n                <Search  search={this.search}/>\n                <OwnerPosts key={this.state.userOwner.id} description={this.state.userOwner.type} userLogin={this.state.userOwner.login} avatarUrl={this.state.userOwner.avatar_url} />\n                {\n                  this.state.postList.map((post)=> {return (\n                        <PostItems key={post.id} postName={post.full_name}  postUrl={post.html_url} posDate={post.created_at}/>\n                      )}\n                  )\n                }\n            </div>\n            <div className=\"container--img\">\n                <img src={bg} alt=\"Background Posts\" />\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}