{"ast":null,"code":"export var signIn = function signIn() {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth(); // *****************************\n    // EMAIL AND PASS PROVIDER\n    // const providerMail = new firebase.auth.signInWithEmailAndPassword(\n    //   credentials.email,\n    //   credentials.password\n    // ).then(() => {\n    //   dispatch({ type: 'LOGIN_SUCCESS' });\n    // }).catch((err) => {\n    //   dispatch({ type: 'LOGIN_ERROR', err });\n    // })\n    // *****************************\n    // GIT PROVIDER SIGNUP\n\n    var providerGith = new firebase.auth.GithubAuthProvider();\n    providerGith.addScope('gist');\n    firebase.auth().signInWithPopup(providerGith).then(function (result) {\n      localStorage.setItem('uidToken', result.credential.accessToken);\n      localStorage.setItem('userRegistered', JSON.stringify(result.user));\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      }).then(function (response) {\n        dispatch(push('/dashBoard'));\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        error: error\n      });\n    });\n  };\n};\nexport var signOut = function signOut() {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signOut().then(function () {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/src/app/store/actions/actions.js"],"names":["signIn","dispatch","getState","getFirebase","firebase","auth","providerGith","GithubAuthProvider","addScope","signInWithPopup","then","result","localStorage","setItem","credential","accessToken","JSON","stringify","user","type","response","push","catch","error","signOut"],"mappings":"AAAA,OAAO,IAAMA,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAuC;AAAA,QAAjBC,WAAiB,QAAjBA,WAAiB;AAC5C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CAACC,IAAT,GAF4C,CAG5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMC,YAAY,GAAG,IAAIF,QAAQ,CAACC,IAAT,CAAcE,kBAAlB,EAArB;AACAD,IAAAA,YAAY,CAACE,QAAb,CAAsB,MAAtB;AACAJ,IAAAA,QAAQ,CAACC,IAAT,GAAgBI,eAAhB,CAAgCH,YAAhC,EAA8CI,IAA9C,CAAmD,UAASC,MAAT,EAAiB;AAElEC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,MAAM,CAACG,UAAP,CAAkBC,WAAnD;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCG,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,IAAtB,CAAvC;AACAjB,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,IAAI,EAAG;AAAT,OAAD,CAAR,CAAqCT,IAArC,CAA0C,UAACU,QAAD,EAAc;AACtDnB,QAAAA,QAAQ,CAACoB,IAAI,CAAC,YAAD,CAAL,CAAR;AACD,OAFD;AAID,KARD,EAQGC,KARH,CAQS,UAASC,KAAT,EAAgB;AACvBtB,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,IAAI,EAAG,aAAT;AAAyBI,QAAAA,KAAK,EAALA;AAAzB,OAAD,CAAR;AACD,KAVD;AAWD,GA7BD;AA8BD,CA/BM;AAiCP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,UAACvB,QAAD,EAAWC,QAAX,SAAuC;AAAA,QAAjBC,WAAiB,SAAjBA,WAAiB;AAC5C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBmB,OAAhB,GAA0Bd,IAA1B,CAA+B,YAAM;AACnCT,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFD;AAGD,GALD;AAMD,CAPM","sourcesContent":["export const signIn = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();    \n    firebase.auth()\n    // *****************************\n    // EMAIL AND PASS PROVIDER\n    // const providerMail = new firebase.auth.signInWithEmailAndPassword(\n    //   credentials.email,\n    //   credentials.password\n    // ).then(() => {\n    //   dispatch({ type: 'LOGIN_SUCCESS' });\n    // }).catch((err) => {\n    //   dispatch({ type: 'LOGIN_ERROR', err });\n    // })\n    // *****************************\n\n    // GIT PROVIDER SIGNUP\n    const providerGith = new firebase.auth.GithubAuthProvider();\n    providerGith.addScope('gist');\n    firebase.auth().signInWithPopup(providerGith).then(function(result) {\n\n      localStorage.setItem('uidToken', result.credential.accessToken);\n      localStorage.setItem('userRegistered', JSON.stringify(result.user));\n      dispatch({ type : 'LOGIN_SUCCESS' }).then((response) => {\n        dispatch(push('/dashBoard'));\n      });\n\n    }).catch(function(error) {\n      dispatch({ type : 'LOGIN_ERROR' , error})\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n} "]},"metadata":{},"sourceType":"module"}