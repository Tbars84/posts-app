{"ast":null,"code":"import _classCallCheck from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SignedInLinks from './signButtons/signedIn';\nimport SignedOutLinks from './signButtons/singneOut';\nimport { signIn as _signIn, signOut as _signOut } from '../../store/actions/actions';\nimport './navBarSt.css';\nexport var NavBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavBar, _Component);\n\n  function NavBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NavBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.loggIn = function () {\n      var log = function log() {\n        return _this.props.signPending;\n      };\n\n      console.log(_this.props);\n    };\n\n    _this.loggOut = function () {\n      _this.props.signOut();\n    };\n\n    return _this;\n  }\n\n  _createClass(NavBar, [{\n    key: \"render\",\n    value: function render() {// const { auth , authSpinner  } = this.props\n      // console.log(auth , authSpinner)\n      // if (!auth.uid) return <SignedOutLinks btnLogIn={this.loggIn } />\n      // if (auth.uid) return <SignedInLinks nameUser={auth.displayName} avatarUser={auth.photoURL} btnLogOut={this.loggOut} /> \n    }\n  }]);\n\n  return NavBar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.firebase.auth,\n    authSpinner: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signPending: function signPending() {\n      return dispatch({\n        type: 'LOGIN_PENDING'\n      });\n    },\n    signIn: function signIn(creds) {\n      return dispatch(_signIn(creds));\n    },\n    signOut: function signOut() {\n      return dispatch(_signOut());\n    }\n  };\n}; // export default connect(mapStateToProps , mapDispatchToProps)(NavBar)\n\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/src/app/components/header/navBar.js"],"names":["React","Component","connect","SignedInLinks","SignedOutLinks","signIn","signOut","NavBar","loggIn","log","props","signPending","console","loggOut","mapStateToProps","state","auth","firebase","authSpinner","mapDispatchToProps","dispatch","type","creds"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,MAAM,IAANA,OAAT,EAAkBC,OAAO,IAAPA,QAAlB,QAAiC,6BAAjC;AACA,OAAO,gBAAP;AAEA,WAAaC,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACEC,MADF,GACW,YAAM;AACb,UAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,eAAM,MAAKC,KAAL,CAAWC,WAAjB;AAAA,OAAZ;;AACAC,MAAAA,OAAO,CAACH,GAAR,CAAY,MAAKC,KAAjB;AACD,KAJH;;AAAA,UAKEG,OALF,GAKY,YAAM;AACd,YAAKH,KAAL,CAAWJ,OAAX;AACD,KAPH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAQW,CACP;AACA;AACA;AACA;AACD;AAbH;;AAAA;AAAA,EAA4BL,SAA5B;;AAgBA,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACE,QAAN,CAAeD,IADhB;AAELE,IAAAA,WAAW,EAAEH,KAAK,CAACC;AAFd,GAAP;AAID,CALD;;AAMA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLT,IAAAA,WAAW,EAAE;AAAA,aAAMS,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAd;AAAA,KADR;AAELhB,IAAAA,MAAM,EAAE,gBAACiB,KAAD;AAAA,aAAWF,QAAQ,CAACf,OAAM,CAACiB,KAAD,CAAP,CAAnB;AAAA,KAFH;AAGLhB,IAAAA,OAAO,EAAE;AAAA,aAAMc,QAAQ,CAACd,QAAO,EAAR,CAAd;AAAA;AAHJ,GAAP;AAKD,CAND,C,CAOA;;;AACA,eAAeC,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SignedInLinks from './signButtons/signedIn'\nimport SignedOutLinks from './signButtons/singneOut'\nimport { signIn , signOut } from '../../store/actions/actions'\nimport './navBarSt.css'\n\nexport class NavBar extends Component {\n  loggIn = () => {\n    const log = () => this.props.signPending;\n    console.log(this.props)\n  }\n  loggOut = () => {\n    this.props.signOut()\n  }\n  render() {  \n    // const { auth , authSpinner  } = this.props\n    // console.log(auth , authSpinner)\n    // if (!auth.uid) return <SignedOutLinks btnLogIn={this.loggIn } />\n    // if (auth.uid) return <SignedInLinks nameUser={auth.displayName} avatarUser={auth.photoURL} btnLogOut={this.loggOut} /> \n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authSpinner: state.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signPending: () => dispatch({type: 'LOGIN_PENDING'}),\n    signIn: (creds) => dispatch(signIn(creds)),\n    signOut: () => dispatch(signOut())\n  }\n}\n// export default connect(mapStateToProps , mapDispatchToProps)(NavBar)\nexport default NavBar\n"]},"metadata":{},"sourceType":"module"}