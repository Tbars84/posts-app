{"ast":null,"code":"import axios from 'axios';\nexport var fetchAllGists = function fetchAllGists(name) {\n  // return (dispatch) => {\n  //   return axios.get(`https://api.github.com/users/${name}/gists`)\n  //     .then(response => {\n  //       dispatch(fetchGist(response.data))\n  //     })\n  //     .catch(error => {\n  //       throw(error);\n  //     });\n  // };\n  return function (dispatch) {\n    console.log(\"https://api.github.com/users/\".concat(name, \"/gists\"));\n    axios.get(\"https://api.github.com/users/\".concat(name, \"/gists\")).then(function (response) {\n      dispatch(fetchGist(response.data));\n    });\n  };\n};\nexport var fetchGist = function fetchGist(posts) {\n  return {\n    type: 'FETCH_GISTS',\n    payload: posts\n  };\n};","map":{"version":3,"sources":["/Users/camilo_tabares/Desktop/react/code-challenge/support-files/post-app/src/app/store/actions/apiCalls.js"],"names":["axios","fetchAllGists","name","dispatch","console","log","get","then","response","fetchGist","data","posts","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAO,UAACC,QAAD,EAAa;AAClBC,IAAAA,OAAO,CAACC,GAAR,wCAA4CH,IAA5C;AACAF,IAAAA,KAAK,CAACM,GAAN,wCAA0CJ,IAA1C,aACCK,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBL,MAAAA,QAAQ,CAACM,SAAS,CAACD,QAAQ,CAACE,IAAV,CAAV,CAAR;AACD,KAHD;AAID,GAND;AAOD,CAlBM;AAoBP,OAAO,IAAMD,SAAS,GAAG,SAAZA,SAAY,CAACE,KAAD,EAAW;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAGF;AAFL,GAAP;AAID,CALI","sourcesContent":["import axios from 'axios'\n\n  \nexport const fetchAllGists = (name) => {\n  // return (dispatch) => {\n  //   return axios.get(`https://api.github.com/users/${name}/gists`)\n  //     .then(response => {\n  //       dispatch(fetchGist(response.data))\n  //     })\n  //     .catch(error => {\n  //       throw(error);\n  //     });\n  // };\n\n  return (dispatch) =>{\n    console.log(`https://api.github.com/users/${name}/gists`);\n    axios.get(`https://api.github.com/users/${name}/gists`)\n    .then(response => {  \n      dispatch(fetchGist(response.data))\n    })\n  }\n};\n\nexport const fetchGist = (posts) => {\n    return {\n      type: 'FETCH_GISTS',\n      payload : posts\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}